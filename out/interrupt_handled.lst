                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module interrupt_handled
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _P
                                     12 	.globl _F1
                                     13 	.globl _OV
                                     14 	.globl _RS0
                                     15 	.globl _RS1
                                     16 	.globl _F0
                                     17 	.globl _AC
                                     18 	.globl _CY
                                     19 	.globl _P54
                                     20 	.globl _P53
                                     21 	.globl _P52
                                     22 	.globl _P51
                                     23 	.globl _P50
                                     24 	.globl _P47
                                     25 	.globl _P46
                                     26 	.globl _P45
                                     27 	.globl _P44
                                     28 	.globl _P43
                                     29 	.globl _P42
                                     30 	.globl _P41
                                     31 	.globl _P40
                                     32 	.globl _PX0
                                     33 	.globl _PT0
                                     34 	.globl _PX1
                                     35 	.globl _PT1
                                     36 	.globl _PS
                                     37 	.globl _PADC
                                     38 	.globl _PLVD
                                     39 	.globl _PPCA
                                     40 	.globl _P37
                                     41 	.globl _P36
                                     42 	.globl _P35
                                     43 	.globl _P34
                                     44 	.globl _P33
                                     45 	.globl _P32
                                     46 	.globl _P31
                                     47 	.globl _P30
                                     48 	.globl _EX0
                                     49 	.globl _ET0
                                     50 	.globl _EX1
                                     51 	.globl _ET1
                                     52 	.globl _ES
                                     53 	.globl _EADC
                                     54 	.globl _ELVD
                                     55 	.globl _EA
                                     56 	.globl _P27
                                     57 	.globl _P26
                                     58 	.globl _P25
                                     59 	.globl _P24
                                     60 	.globl _P23
                                     61 	.globl _P22
                                     62 	.globl _P21
                                     63 	.globl _P20
                                     64 	.globl _RI
                                     65 	.globl _TI
                                     66 	.globl _RB8
                                     67 	.globl _TB8
                                     68 	.globl _REN
                                     69 	.globl _SM2
                                     70 	.globl _SM1
                                     71 	.globl _SM0
                                     72 	.globl _P17
                                     73 	.globl _P16
                                     74 	.globl _P15
                                     75 	.globl _P14
                                     76 	.globl _P13
                                     77 	.globl _P12
                                     78 	.globl _P11
                                     79 	.globl _P10
                                     80 	.globl _IT0
                                     81 	.globl _IE0
                                     82 	.globl _IT1
                                     83 	.globl _IE1
                                     84 	.globl _TR0
                                     85 	.globl _TF0
                                     86 	.globl _TR1
                                     87 	.globl _TF1
                                     88 	.globl _P07
                                     89 	.globl _P06
                                     90 	.globl _P05
                                     91 	.globl _P04
                                     92 	.globl _P03
                                     93 	.globl _P02
                                     94 	.globl _P01
                                     95 	.globl _P00
                                     96 	.globl _RSTCFG
                                     97 	.globl _USBADR
                                     98 	.globl _P7
                                     99 	.globl _IAP_TPS
                                    100 	.globl _USBCON
                                    101 	.globl _B
                                    102 	.globl _AUXINTIF
                                    103 	.globl _IP3H
                                    104 	.globl _USBDAT
                                    105 	.globl _P6
                                    106 	.globl _CMPCR2
                                    107 	.globl _CMPCR1
                                    108 	.globl _DPH1
                                    109 	.globl _DPL1
                                    110 	.globl _DPS
                                    111 	.globl _P7M0
                                    112 	.globl _P7M1
                                    113 	.globl _ACC
                                    114 	.globl _IP3
                                    115 	.globl _ADCCFG
                                    116 	.globl _USBCLK
                                    117 	.globl _T2L
                                    118 	.globl _T2H
                                    119 	.globl _T3L
                                    120 	.globl _T3H
                                    121 	.globl _T4L
                                    122 	.globl _T4H
                                    123 	.globl _T4T3M
                                    124 	.globl _PSW
                                    125 	.globl _SPDAT
                                    126 	.globl _SPCTL
                                    127 	.globl _SPSTAT
                                    128 	.globl _P6M0
                                    129 	.globl _P6M1
                                    130 	.globl _P5M0
                                    131 	.globl _P5M1
                                    132 	.globl _P5
                                    133 	.globl _IAP_CONTR
                                    134 	.globl _IAP_TRIG
                                    135 	.globl _IAP_CMD
                                    136 	.globl _IAP_ADDRL
                                    137 	.globl _IAP_ADDRH
                                    138 	.globl _IAP_DATA
                                    139 	.globl _WDT_CONTR
                                    140 	.globl _P4
                                    141 	.globl _ADC_RESL
                                    142 	.globl _ADC_RES
                                    143 	.globl _ADC_CONTR
                                    144 	.globl _P_SW2
                                    145 	.globl _SADEN
                                    146 	.globl _IP
                                    147 	.globl _IPH
                                    148 	.globl _IP2H
                                    149 	.globl _IP2
                                    150 	.globl _P4M0
                                    151 	.globl _P4M1
                                    152 	.globl _P3M0
                                    153 	.globl _P3M1
                                    154 	.globl _P3
                                    155 	.globl _IE2
                                    156 	.globl _TA
                                    157 	.globl _S3BUF
                                    158 	.globl _S3CON
                                    159 	.globl _WKTCH
                                    160 	.globl _WKTCL
                                    161 	.globl _SADDR
                                    162 	.globl _IE
                                    163 	.globl _P_SW1
                                    164 	.globl _P2
                                    165 	.globl _IRTRIM
                                    166 	.globl _LIRTRIM
                                    167 	.globl _IRCBAND
                                    168 	.globl _S2BUF
                                    169 	.globl _S2CON
                                    170 	.globl _SBUF
                                    171 	.globl _SCON
                                    172 	.globl _P2M0
                                    173 	.globl _P2M1
                                    174 	.globl _P0M0
                                    175 	.globl _P0M1
                                    176 	.globl _P1M0
                                    177 	.globl _P1M1
                                    178 	.globl _P1
                                    179 	.globl _INTCLKO
                                    180 	.globl _AUXR
                                    181 	.globl _TH1
                                    182 	.globl _TH0
                                    183 	.globl _TL1
                                    184 	.globl _TL0
                                    185 	.globl _TMOD
                                    186 	.globl _TCON
                                    187 	.globl _PCON
                                    188 	.globl _S4BUF
                                    189 	.globl _S4CON
                                    190 	.globl _DPH
                                    191 	.globl _DPL
                                    192 	.globl _SP
                                    193 	.globl _P0
                                    194 	.globl _wakeup_flag
                                    195 	.globl _INT0_Interrupt
                                    196 	.globl _TIME0_Interrupt
                                    197 	.globl _INT1_Interrupt
                                    198 	.globl _TIME1_Interrupt
                                    199 	.globl _UART1_Interrupt
                                    200 	.globl _ADC_Interrupt
                                    201 	.globl _LVD_Interrupt
                                    202 	.globl _PCA_Interrupt
                                    203 	.globl _UART2_Interrupt
                                    204 	.globl _SPI_Interrupt
                                    205 	.globl _INT2_Interrupt
                                    206 	.globl _INT3_Interrupt
                                    207 	.globl _TIME2_Interrupt
                                    208 ;--------------------------------------------------------
                                    209 ; special function registers
                                    210 ;--------------------------------------------------------
                                    211 	.area RSEG    (ABS,DATA)
      000000                        212 	.org 0x0000
                           000080   213 _P0	=	0x0080
                           000081   214 _SP	=	0x0081
                           000082   215 _DPL	=	0x0082
                           000083   216 _DPH	=	0x0083
                           000084   217 _S4CON	=	0x0084
                           000085   218 _S4BUF	=	0x0085
                           000087   219 _PCON	=	0x0087
                           000088   220 _TCON	=	0x0088
                           000089   221 _TMOD	=	0x0089
                           00008A   222 _TL0	=	0x008a
                           00008B   223 _TL1	=	0x008b
                           00008C   224 _TH0	=	0x008c
                           00008D   225 _TH1	=	0x008d
                           00008E   226 _AUXR	=	0x008e
                           00008F   227 _INTCLKO	=	0x008f
                           000090   228 _P1	=	0x0090
                           000091   229 _P1M1	=	0x0091
                           000092   230 _P1M0	=	0x0092
                           000093   231 _P0M1	=	0x0093
                           000094   232 _P0M0	=	0x0094
                           000095   233 _P2M1	=	0x0095
                           000096   234 _P2M0	=	0x0096
                           000098   235 _SCON	=	0x0098
                           000099   236 _SBUF	=	0x0099
                           00009A   237 _S2CON	=	0x009a
                           00009B   238 _S2BUF	=	0x009b
                           00009D   239 _IRCBAND	=	0x009d
                           00009E   240 _LIRTRIM	=	0x009e
                           00009F   241 _IRTRIM	=	0x009f
                           0000A0   242 _P2	=	0x00a0
                           0000A2   243 _P_SW1	=	0x00a2
                           0000A8   244 _IE	=	0x00a8
                           0000A9   245 _SADDR	=	0x00a9
                           0000AA   246 _WKTCL	=	0x00aa
                           0000AB   247 _WKTCH	=	0x00ab
                           0000AC   248 _S3CON	=	0x00ac
                           0000AD   249 _S3BUF	=	0x00ad
                           0000AE   250 _TA	=	0x00ae
                           0000AF   251 _IE2	=	0x00af
                           0000B0   252 _P3	=	0x00b0
                           0000B1   253 _P3M1	=	0x00b1
                           0000B2   254 _P3M0	=	0x00b2
                           0000B3   255 _P4M1	=	0x00b3
                           0000B4   256 _P4M0	=	0x00b4
                           0000B5   257 _IP2	=	0x00b5
                           0000B6   258 _IP2H	=	0x00b6
                           0000B7   259 _IPH	=	0x00b7
                           0000B8   260 _IP	=	0x00b8
                           0000B9   261 _SADEN	=	0x00b9
                           0000BA   262 _P_SW2	=	0x00ba
                           0000BC   263 _ADC_CONTR	=	0x00bc
                           0000BD   264 _ADC_RES	=	0x00bd
                           0000BE   265 _ADC_RESL	=	0x00be
                           0000C0   266 _P4	=	0x00c0
                           0000C1   267 _WDT_CONTR	=	0x00c1
                           0000C2   268 _IAP_DATA	=	0x00c2
                           0000C3   269 _IAP_ADDRH	=	0x00c3
                           0000C4   270 _IAP_ADDRL	=	0x00c4
                           0000C5   271 _IAP_CMD	=	0x00c5
                           0000C6   272 _IAP_TRIG	=	0x00c6
                           0000C7   273 _IAP_CONTR	=	0x00c7
                           0000C8   274 _P5	=	0x00c8
                           0000C9   275 _P5M1	=	0x00c9
                           0000CA   276 _P5M0	=	0x00ca
                           0000CB   277 _P6M1	=	0x00cb
                           0000CC   278 _P6M0	=	0x00cc
                           0000CD   279 _SPSTAT	=	0x00cd
                           0000CE   280 _SPCTL	=	0x00ce
                           0000CF   281 _SPDAT	=	0x00cf
                           0000D0   282 _PSW	=	0x00d0
                           0000D1   283 _T4T3M	=	0x00d1
                           0000D2   284 _T4H	=	0x00d2
                           0000D3   285 _T4L	=	0x00d3
                           0000D4   286 _T3H	=	0x00d4
                           0000D5   287 _T3L	=	0x00d5
                           0000D6   288 _T2H	=	0x00d6
                           0000D7   289 _T2L	=	0x00d7
                           0000DC   290 _USBCLK	=	0x00dc
                           0000DE   291 _ADCCFG	=	0x00de
                           0000DF   292 _IP3	=	0x00df
                           0000E0   293 _ACC	=	0x00e0
                           0000E1   294 _P7M1	=	0x00e1
                           0000E2   295 _P7M0	=	0x00e2
                           0000E3   296 _DPS	=	0x00e3
                           0000E4   297 _DPL1	=	0x00e4
                           0000E5   298 _DPH1	=	0x00e5
                           0000E6   299 _CMPCR1	=	0x00e6
                           0000E7   300 _CMPCR2	=	0x00e7
                           0000E8   301 _P6	=	0x00e8
                           0000EC   302 _USBDAT	=	0x00ec
                           0000EE   303 _IP3H	=	0x00ee
                           0000EF   304 _AUXINTIF	=	0x00ef
                           0000F0   305 _B	=	0x00f0
                           0000F4   306 _USBCON	=	0x00f4
                           0000F5   307 _IAP_TPS	=	0x00f5
                           0000F8   308 _P7	=	0x00f8
                           0000FC   309 _USBADR	=	0x00fc
                           0000FF   310 _RSTCFG	=	0x00ff
                                    311 ;--------------------------------------------------------
                                    312 ; special function bits
                                    313 ;--------------------------------------------------------
                                    314 	.area RSEG    (ABS,DATA)
      000000                        315 	.org 0x0000
                           000080   316 _P00	=	0x0080
                           000081   317 _P01	=	0x0081
                           000082   318 _P02	=	0x0082
                           000083   319 _P03	=	0x0083
                           000084   320 _P04	=	0x0084
                           000085   321 _P05	=	0x0085
                           000086   322 _P06	=	0x0086
                           000087   323 _P07	=	0x0087
                           00008F   324 _TF1	=	0x008f
                           00008E   325 _TR1	=	0x008e
                           00008D   326 _TF0	=	0x008d
                           00008C   327 _TR0	=	0x008c
                           00008B   328 _IE1	=	0x008b
                           00008A   329 _IT1	=	0x008a
                           000089   330 _IE0	=	0x0089
                           000088   331 _IT0	=	0x0088
                           000090   332 _P10	=	0x0090
                           000091   333 _P11	=	0x0091
                           000092   334 _P12	=	0x0092
                           000093   335 _P13	=	0x0093
                           000094   336 _P14	=	0x0094
                           000095   337 _P15	=	0x0095
                           000096   338 _P16	=	0x0096
                           000097   339 _P17	=	0x0097
                           00009F   340 _SM0	=	0x009f
                           00009E   341 _SM1	=	0x009e
                           00009D   342 _SM2	=	0x009d
                           00009C   343 _REN	=	0x009c
                           00009B   344 _TB8	=	0x009b
                           00009A   345 _RB8	=	0x009a
                           000099   346 _TI	=	0x0099
                           000098   347 _RI	=	0x0098
                           0000A0   348 _P20	=	0x00a0
                           0000A1   349 _P21	=	0x00a1
                           0000A2   350 _P22	=	0x00a2
                           0000A3   351 _P23	=	0x00a3
                           0000A4   352 _P24	=	0x00a4
                           0000A5   353 _P25	=	0x00a5
                           0000A6   354 _P26	=	0x00a6
                           0000A7   355 _P27	=	0x00a7
                           0000AF   356 _EA	=	0x00af
                           0000AE   357 _ELVD	=	0x00ae
                           0000AD   358 _EADC	=	0x00ad
                           0000AC   359 _ES	=	0x00ac
                           0000AB   360 _ET1	=	0x00ab
                           0000AA   361 _EX1	=	0x00aa
                           0000A9   362 _ET0	=	0x00a9
                           0000A8   363 _EX0	=	0x00a8
                           0000B0   364 _P30	=	0x00b0
                           0000B1   365 _P31	=	0x00b1
                           0000B2   366 _P32	=	0x00b2
                           0000B3   367 _P33	=	0x00b3
                           0000B4   368 _P34	=	0x00b4
                           0000B5   369 _P35	=	0x00b5
                           0000B6   370 _P36	=	0x00b6
                           0000B7   371 _P37	=	0x00b7
                           0000BF   372 _PPCA	=	0x00bf
                           0000BE   373 _PLVD	=	0x00be
                           0000BD   374 _PADC	=	0x00bd
                           0000BC   375 _PS	=	0x00bc
                           0000BB   376 _PT1	=	0x00bb
                           0000BA   377 _PX1	=	0x00ba
                           0000B9   378 _PT0	=	0x00b9
                           0000B8   379 _PX0	=	0x00b8
                           0000C0   380 _P40	=	0x00c0
                           0000C1   381 _P41	=	0x00c1
                           0000C2   382 _P42	=	0x00c2
                           0000C3   383 _P43	=	0x00c3
                           0000C4   384 _P44	=	0x00c4
                           0000C5   385 _P45	=	0x00c5
                           0000C6   386 _P46	=	0x00c6
                           0000C7   387 _P47	=	0x00c7
                           0000C8   388 _P50	=	0x00c8
                           0000C9   389 _P51	=	0x00c9
                           0000CA   390 _P52	=	0x00ca
                           0000CB   391 _P53	=	0x00cb
                           0000CC   392 _P54	=	0x00cc
                           0000D7   393 _CY	=	0x00d7
                           0000D6   394 _AC	=	0x00d6
                           0000D5   395 _F0	=	0x00d5
                           0000D4   396 _RS1	=	0x00d4
                           0000D3   397 _RS0	=	0x00d3
                           0000D2   398 _OV	=	0x00d2
                           0000D1   399 _F1	=	0x00d1
                           0000D0   400 _P	=	0x00d0
                                    401 ;--------------------------------------------------------
                                    402 ; overlayable register banks
                                    403 ;--------------------------------------------------------
                                    404 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        405 	.ds 8
                                    406 	.area REG_BANK_1	(REL,OVR,DATA)
      000000                        407 	.ds 8
                                    408 ;--------------------------------------------------------
                                    409 ; internal ram data
                                    410 ;--------------------------------------------------------
                                    411 	.area DSEG    (DATA)
      000000                        412 _wakeup_flag::
      000000                        413 	.ds 1
                                    414 ;--------------------------------------------------------
                                    415 ; overlayable items in internal ram
                                    416 ;--------------------------------------------------------
                                    417 ;--------------------------------------------------------
                                    418 ; indirectly addressable internal ram data
                                    419 ;--------------------------------------------------------
                                    420 	.area ISEG    (DATA)
                                    421 ;--------------------------------------------------------
                                    422 ; absolute internal ram data
                                    423 ;--------------------------------------------------------
                                    424 	.area IABS    (ABS,DATA)
                                    425 	.area IABS    (ABS,DATA)
                                    426 ;--------------------------------------------------------
                                    427 ; bit data
                                    428 ;--------------------------------------------------------
                                    429 	.area BSEG    (BIT)
                                    430 ;--------------------------------------------------------
                                    431 ; paged external ram data
                                    432 ;--------------------------------------------------------
                                    433 	.area PSEG    (PAG,XDATA)
                                    434 ;--------------------------------------------------------
                                    435 ; external ram data
                                    436 ;--------------------------------------------------------
                                    437 	.area XSEG    (XDATA)
                                    438 ;--------------------------------------------------------
                                    439 ; absolute external ram data
                                    440 ;--------------------------------------------------------
                                    441 	.area XABS    (ABS,XDATA)
                                    442 ;--------------------------------------------------------
                                    443 ; external initialized ram data
                                    444 ;--------------------------------------------------------
                                    445 	.area XISEG   (XDATA)
                                    446 	.area HOME    (CODE)
                                    447 	.area GSINIT0 (CODE)
                                    448 	.area GSINIT1 (CODE)
                                    449 	.area GSINIT2 (CODE)
                                    450 	.area GSINIT3 (CODE)
                                    451 	.area GSINIT4 (CODE)
                                    452 	.area GSINIT5 (CODE)
                                    453 	.area GSINIT  (CODE)
                                    454 	.area GSFINAL (CODE)
                                    455 	.area CSEG    (CODE)
                                    456 ;--------------------------------------------------------
                                    457 ; global & static initialisations
                                    458 ;--------------------------------------------------------
                                    459 	.area HOME    (CODE)
                                    460 	.area GSINIT  (CODE)
                                    461 	.area GSFINAL (CODE)
                                    462 	.area GSINIT  (CODE)
                                    463 ;	src/interrupt_handled.c:3: uint8_t wakeup_flag = 0;
      000000 75*00 00         [24]  464 	mov	_wakeup_flag,#0x00
                                    465 ;--------------------------------------------------------
                                    466 ; Home
                                    467 ;--------------------------------------------------------
                                    468 	.area HOME    (CODE)
                                    469 	.area HOME    (CODE)
                                    470 ;--------------------------------------------------------
                                    471 ; code
                                    472 ;--------------------------------------------------------
                                    473 	.area CSEG    (CODE)
                                    474 ;------------------------------------------------------------
                                    475 ;Allocation info for local variables in function 'INT0_Interrupt'
                                    476 ;------------------------------------------------------------
                                    477 ;	src/interrupt_handled.c:7: void INT0_Interrupt(void) interrupt(0)
                                    478 ;	-----------------------------------------
                                    479 ;	 function INT0_Interrupt
                                    480 ;	-----------------------------------------
      000000                        481 _INT0_Interrupt:
                           000007   482 	ar7 = 0x07
                           000006   483 	ar6 = 0x06
                           000005   484 	ar5 = 0x05
                           000004   485 	ar4 = 0x04
                           000003   486 	ar3 = 0x03
                           000002   487 	ar2 = 0x02
                           000001   488 	ar1 = 0x01
                           000000   489 	ar0 = 0x00
                                    490 ;	src/interrupt_handled.c:9: IAP_CONTR |= 0x60;
      000000 43 C7 60         [24]  491 	orl	_IAP_CONTR,#0x60
                                    492 ;	src/interrupt_handled.c:10: }
      000003 32               [24]  493 	reti
                                    494 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    495 ;	eliminated unneeded push/pop not_psw
                                    496 ;	eliminated unneeded push/pop dpl
                                    497 ;	eliminated unneeded push/pop dph
                                    498 ;	eliminated unneeded push/pop b
                                    499 ;	eliminated unneeded push/pop acc
                                    500 ;------------------------------------------------------------
                                    501 ;Allocation info for local variables in function 'TIME0_Interrupt'
                                    502 ;------------------------------------------------------------
                                    503 ;i                         Allocated to registers r7 
                                    504 ;------------------------------------------------------------
                                    505 ;	src/interrupt_handled.c:12: void TIME0_Interrupt(void) interrupt(1) using(1)
                                    506 ;	-----------------------------------------
                                    507 ;	 function TIME0_Interrupt
                                    508 ;	-----------------------------------------
      000004                        509 _TIME0_Interrupt:
                           00000F   510 	ar7 = 0x0f
                           00000E   511 	ar6 = 0x0e
                           00000D   512 	ar5 = 0x0d
                           00000C   513 	ar4 = 0x0c
                           00000B   514 	ar3 = 0x0b
                           00000A   515 	ar2 = 0x0a
                           000009   516 	ar1 = 0x09
                           000008   517 	ar0 = 0x08
      000004 C0 E0            [24]  518 	push	acc
      000006 C0 D0            [24]  519 	push	psw
      000008 75 D0 08         [24]  520 	mov	psw,#0x08
                                    521 ;	src/interrupt_handled.c:14: UpdateTimers();
      00000B 7F 05            [12]  522 	mov	r7,#0x05
      00000D                        523 00108$:
      00000D 8F 0E            [24]  524 	mov	ar6,r7
      00000F EE               [12]  525 	mov	a,r6
      000010 14               [12]  526 	dec	a
      000011 24r00            [12]  527 	add	a,#_timers
      000013 F9               [12]  528 	mov	r1,a
      000014 E7               [12]  529 	mov	a,@r1
      000015 60 15            [24]  530 	jz	00109$
      000017 EE               [12]  531 	mov	a,r6
      000018 14               [12]  532 	dec	a
      000019 24r00            [12]  533 	add	a,#_timers
      00001B F9               [12]  534 	mov	r1,a
      00001C 87 0D            [24]  535 	mov	ar5,@r1
      00001E BD FF 02         [24]  536 	cjne	r5,#0xff,00129$
      000021 80 09            [24]  537 	sjmp	00109$
      000023                        538 00129$:
      000023 EE               [12]  539 	mov	a,r6
      000024 14               [12]  540 	dec	a
      000025 24r00            [12]  541 	add	a,#_timers
      000027 F9               [12]  542 	mov	r1,a
      000028 E7               [12]  543 	mov	a,@r1
      000029 FE               [12]  544 	mov	r6,a
      00002A 14               [12]  545 	dec	a
      00002B F7               [12]  546 	mov	@r1,a
      00002C                        547 00109$:
      00002C DF DF            [24]  548 	djnz	r7,00108$
                                    549 ;	src/interrupt_handled.c:15: }
      00002E D0 D0            [24]  550 	pop	psw
      000030 D0 E0            [24]  551 	pop	acc
      000032 32               [24]  552 	reti
                                    553 ;	eliminated unneeded push/pop dpl
                                    554 ;	eliminated unneeded push/pop dph
                                    555 ;	eliminated unneeded push/pop b
                                    556 ;------------------------------------------------------------
                                    557 ;Allocation info for local variables in function 'INT1_Interrupt'
                                    558 ;------------------------------------------------------------
                                    559 ;	src/interrupt_handled.c:17: void INT1_Interrupt(void) interrupt(2)
                                    560 ;	-----------------------------------------
                                    561 ;	 function INT1_Interrupt
                                    562 ;	-----------------------------------------
      000033                        563 _INT1_Interrupt:
                           000007   564 	ar7 = 0x07
                           000006   565 	ar6 = 0x06
                           000005   566 	ar5 = 0x05
                           000004   567 	ar4 = 0x04
                           000003   568 	ar3 = 0x03
                           000002   569 	ar2 = 0x02
                           000001   570 	ar1 = 0x01
                           000000   571 	ar0 = 0x00
                                    572 ;	src/interrupt_handled.c:19: IAP_CONTR |= 0x60;
      000033 43 C7 60         [24]  573 	orl	_IAP_CONTR,#0x60
                                    574 ;	src/interrupt_handled.c:20: }
      000036 32               [24]  575 	reti
                                    576 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    577 ;	eliminated unneeded push/pop not_psw
                                    578 ;	eliminated unneeded push/pop dpl
                                    579 ;	eliminated unneeded push/pop dph
                                    580 ;	eliminated unneeded push/pop b
                                    581 ;	eliminated unneeded push/pop acc
                                    582 ;------------------------------------------------------------
                                    583 ;Allocation info for local variables in function 'TIME1_Interrupt'
                                    584 ;------------------------------------------------------------
                                    585 ;	src/interrupt_handled.c:22: void TIME1_Interrupt(void) interrupt(3)
                                    586 ;	-----------------------------------------
                                    587 ;	 function TIME1_Interrupt
                                    588 ;	-----------------------------------------
      000037                        589 _TIME1_Interrupt:
                                    590 ;	src/interrupt_handled.c:24: IAP_CONTR |= 0x60;
      000037 43 C7 60         [24]  591 	orl	_IAP_CONTR,#0x60
                                    592 ;	src/interrupt_handled.c:25: }
      00003A 32               [24]  593 	reti
                                    594 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    595 ;	eliminated unneeded push/pop not_psw
                                    596 ;	eliminated unneeded push/pop dpl
                                    597 ;	eliminated unneeded push/pop dph
                                    598 ;	eliminated unneeded push/pop b
                                    599 ;	eliminated unneeded push/pop acc
                                    600 ;------------------------------------------------------------
                                    601 ;Allocation info for local variables in function 'UART1_Interrupt'
                                    602 ;------------------------------------------------------------
                                    603 ;	src/interrupt_handled.c:27: void UART1_Interrupt(void) interrupt(4)
                                    604 ;	-----------------------------------------
                                    605 ;	 function UART1_Interrupt
                                    606 ;	-----------------------------------------
      00003B                        607 _UART1_Interrupt:
                                    608 ;	src/interrupt_handled.c:29: IAP_CONTR |= 0x60;
      00003B 43 C7 60         [24]  609 	orl	_IAP_CONTR,#0x60
                                    610 ;	src/interrupt_handled.c:30: }
      00003E 32               [24]  611 	reti
                                    612 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    613 ;	eliminated unneeded push/pop not_psw
                                    614 ;	eliminated unneeded push/pop dpl
                                    615 ;	eliminated unneeded push/pop dph
                                    616 ;	eliminated unneeded push/pop b
                                    617 ;	eliminated unneeded push/pop acc
                                    618 ;------------------------------------------------------------
                                    619 ;Allocation info for local variables in function 'ADC_Interrupt'
                                    620 ;------------------------------------------------------------
                                    621 ;	src/interrupt_handled.c:32: void ADC_Interrupt(void) interrupt(5)
                                    622 ;	-----------------------------------------
                                    623 ;	 function ADC_Interrupt
                                    624 ;	-----------------------------------------
      00003F                        625 _ADC_Interrupt:
                                    626 ;	src/interrupt_handled.c:34: IAP_CONTR |= 0x60;
      00003F 43 C7 60         [24]  627 	orl	_IAP_CONTR,#0x60
                                    628 ;	src/interrupt_handled.c:35: }
      000042 32               [24]  629 	reti
                                    630 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    631 ;	eliminated unneeded push/pop not_psw
                                    632 ;	eliminated unneeded push/pop dpl
                                    633 ;	eliminated unneeded push/pop dph
                                    634 ;	eliminated unneeded push/pop b
                                    635 ;	eliminated unneeded push/pop acc
                                    636 ;------------------------------------------------------------
                                    637 ;Allocation info for local variables in function 'LVD_Interrupt'
                                    638 ;------------------------------------------------------------
                                    639 ;	src/interrupt_handled.c:37: void LVD_Interrupt(void) interrupt(6)
                                    640 ;	-----------------------------------------
                                    641 ;	 function LVD_Interrupt
                                    642 ;	-----------------------------------------
      000043                        643 _LVD_Interrupt:
                                    644 ;	src/interrupt_handled.c:39: IAP_CONTR |= 0x60;
      000043 43 C7 60         [24]  645 	orl	_IAP_CONTR,#0x60
                                    646 ;	src/interrupt_handled.c:40: }
      000046 32               [24]  647 	reti
                                    648 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    649 ;	eliminated unneeded push/pop not_psw
                                    650 ;	eliminated unneeded push/pop dpl
                                    651 ;	eliminated unneeded push/pop dph
                                    652 ;	eliminated unneeded push/pop b
                                    653 ;	eliminated unneeded push/pop acc
                                    654 ;------------------------------------------------------------
                                    655 ;Allocation info for local variables in function 'PCA_Interrupt'
                                    656 ;------------------------------------------------------------
                                    657 ;	src/interrupt_handled.c:42: void PCA_Interrupt(void) interrupt(7)
                                    658 ;	-----------------------------------------
                                    659 ;	 function PCA_Interrupt
                                    660 ;	-----------------------------------------
      000047                        661 _PCA_Interrupt:
                                    662 ;	src/interrupt_handled.c:44: IAP_CONTR |= 0x60;
      000047 43 C7 60         [24]  663 	orl	_IAP_CONTR,#0x60
                                    664 ;	src/interrupt_handled.c:45: }
      00004A 32               [24]  665 	reti
                                    666 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    667 ;	eliminated unneeded push/pop not_psw
                                    668 ;	eliminated unneeded push/pop dpl
                                    669 ;	eliminated unneeded push/pop dph
                                    670 ;	eliminated unneeded push/pop b
                                    671 ;	eliminated unneeded push/pop acc
                                    672 ;------------------------------------------------------------
                                    673 ;Allocation info for local variables in function 'UART2_Interrupt'
                                    674 ;------------------------------------------------------------
                                    675 ;	src/interrupt_handled.c:47: void UART2_Interrupt(void) interrupt(8)
                                    676 ;	-----------------------------------------
                                    677 ;	 function UART2_Interrupt
                                    678 ;	-----------------------------------------
      00004B                        679 _UART2_Interrupt:
                                    680 ;	src/interrupt_handled.c:49: IAP_CONTR |= 0x60;
      00004B 43 C7 60         [24]  681 	orl	_IAP_CONTR,#0x60
                                    682 ;	src/interrupt_handled.c:50: }
      00004E 32               [24]  683 	reti
                                    684 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    685 ;	eliminated unneeded push/pop not_psw
                                    686 ;	eliminated unneeded push/pop dpl
                                    687 ;	eliminated unneeded push/pop dph
                                    688 ;	eliminated unneeded push/pop b
                                    689 ;	eliminated unneeded push/pop acc
                                    690 ;------------------------------------------------------------
                                    691 ;Allocation info for local variables in function 'SPI_Interrupt'
                                    692 ;------------------------------------------------------------
                                    693 ;	src/interrupt_handled.c:52: void SPI_Interrupt(void) interrupt(9)
                                    694 ;	-----------------------------------------
                                    695 ;	 function SPI_Interrupt
                                    696 ;	-----------------------------------------
      00004F                        697 _SPI_Interrupt:
                                    698 ;	src/interrupt_handled.c:54: IAP_CONTR |= 0x60;
      00004F 43 C7 60         [24]  699 	orl	_IAP_CONTR,#0x60
                                    700 ;	src/interrupt_handled.c:55: }
      000052 32               [24]  701 	reti
                                    702 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    703 ;	eliminated unneeded push/pop not_psw
                                    704 ;	eliminated unneeded push/pop dpl
                                    705 ;	eliminated unneeded push/pop dph
                                    706 ;	eliminated unneeded push/pop b
                                    707 ;	eliminated unneeded push/pop acc
                                    708 ;------------------------------------------------------------
                                    709 ;Allocation info for local variables in function 'INT2_Interrupt'
                                    710 ;------------------------------------------------------------
                                    711 ;	src/interrupt_handled.c:57: void INT2_Interrupt(void) interrupt(10)
                                    712 ;	-----------------------------------------
                                    713 ;	 function INT2_Interrupt
                                    714 ;	-----------------------------------------
      000053                        715 _INT2_Interrupt:
                                    716 ;	src/interrupt_handled.c:59: IAP_CONTR |= 0x60;
      000053 43 C7 60         [24]  717 	orl	_IAP_CONTR,#0x60
                                    718 ;	src/interrupt_handled.c:60: }
      000056 32               [24]  719 	reti
                                    720 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    721 ;	eliminated unneeded push/pop not_psw
                                    722 ;	eliminated unneeded push/pop dpl
                                    723 ;	eliminated unneeded push/pop dph
                                    724 ;	eliminated unneeded push/pop b
                                    725 ;	eliminated unneeded push/pop acc
                                    726 ;------------------------------------------------------------
                                    727 ;Allocation info for local variables in function 'INT3_Interrupt'
                                    728 ;------------------------------------------------------------
                                    729 ;	src/interrupt_handled.c:62: void INT3_Interrupt(void) interrupt(11)
                                    730 ;	-----------------------------------------
                                    731 ;	 function INT3_Interrupt
                                    732 ;	-----------------------------------------
      000057                        733 _INT3_Interrupt:
                                    734 ;	src/interrupt_handled.c:64: IAP_CONTR |= 0x60;
      000057 43 C7 60         [24]  735 	orl	_IAP_CONTR,#0x60
                                    736 ;	src/interrupt_handled.c:65: }
      00005A 32               [24]  737 	reti
                                    738 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    739 ;	eliminated unneeded push/pop not_psw
                                    740 ;	eliminated unneeded push/pop dpl
                                    741 ;	eliminated unneeded push/pop dph
                                    742 ;	eliminated unneeded push/pop b
                                    743 ;	eliminated unneeded push/pop acc
                                    744 ;------------------------------------------------------------
                                    745 ;Allocation info for local variables in function 'TIME2_Interrupt'
                                    746 ;------------------------------------------------------------
                                    747 ;	src/interrupt_handled.c:67: void TIME2_Interrupt(void) interrupt(12)
                                    748 ;	-----------------------------------------
                                    749 ;	 function TIME2_Interrupt
                                    750 ;	-----------------------------------------
      00005B                        751 _TIME2_Interrupt:
                                    752 ;	src/interrupt_handled.c:69: IAP_CONTR |= 0x60;
      00005B 43 C7 60         [24]  753 	orl	_IAP_CONTR,#0x60
                                    754 ;	src/interrupt_handled.c:70: }
      00005E 32               [24]  755 	reti
                                    756 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    757 ;	eliminated unneeded push/pop not_psw
                                    758 ;	eliminated unneeded push/pop dpl
                                    759 ;	eliminated unneeded push/pop dph
                                    760 ;	eliminated unneeded push/pop b
                                    761 ;	eliminated unneeded push/pop acc
                                    762 	.area CSEG    (CODE)
                                    763 	.area CONST   (CODE)
                                    764 	.area XINIT   (CODE)
                                    765 	.area CABS    (ABS,CODE)
